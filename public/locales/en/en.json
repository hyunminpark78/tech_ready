{
  "test": "test",
  "menu": {
    "mainDashboard": "Dashboard",
    "totalDashboard": "Total Dashboard",
    "mainCost": "Cost",
    "billingInvoice": "Billing Invoice",
    "billingReport": "Billing Report",
    "costExplorer": "Cost Explorer",
    "costPatternAnalytics": "Cost Pattern Analytics",
    "costAnomalyDetection": "Cost Anomaly Detection",
    "budgetManagement": "Budget Management",
    "contractInformation": "Contract information",
    "mainResource": "Resource",
    "usage": "Usage",
    "performance": "Performance",
    "mainOptimization": "Optimization",
    "middleResourceOptimization": "Resource Optimization",
    "resourceDashboard": "Resource Dashboard",
    "unusedResource": "Unused resource",
    "Rightsizing": "Rightsizing",
    "middleCommitmentOptimization": "Commitment Optimization",
    "aboutCommitmentServices": "About Commitment Services",
    "commitmentDashboard": "Commitment Dashboard",
    "availabilityService": "Available Service",
    "commitmentStatus": "Commitment Status",
    "recommendations": "Recommendations",
    "costOptimization": "Cost Optimization",
    "middleTrustAdvisor": "Trust Advisor",
    "trustedAdvisor": "Trusted Advisor",
    "mainSupport": "Support",
    "notices": "Notices",
    "faqs": "FAQs",
    "supportCenter": "Support Center",
    "userGuide": "User guide",
    "setting": "Setting",
    "serviceGroupSetting": "Service Group Setting",
    "cloudAccountSync": "Cloud Account Integration",
    "notiSetting": "Notification Setting",
    "filterSettings": "Filter settings",
    "awsAccountRegistration": "AWS account registration",
    "azureAccountRegistration": "Azure account registration",
    "appUpdate": "Application update",
    "appDelete": "Application delete",
    "appRegistration": "Application registration",
    "newAccountRegistration": "New account registration",
    "delete": "Delete"
  },
  "common": {
    "select": {
      "select": "Select",
      "contract": "Contract",
      "report": "Report",
      "content": "Content",
      "daily": "Daily",
      "monthly": "Monthly",
      "customer": "Customer",
      "service": "Service",
      "account": "Account",
      "region": "Region",
      "product": "Product",
      "productFamily": "Product family",
      "instanceType": "Instance type",
      "usageType": "Usage type",
      "cpuType": "CPU type",
      "apiOperations": "API Operations",
      "platform": "Platform",
      "database": "Database",
      "costType": "Cost type",
      "billingEntity": "Billing entity",
      "serviceGroup": "Service group",
      "tag": "Tag",
      "instanceGroup": "Instance group",
      "resourceGroup":"Resource group",
      "filter": "Filter",
      "filterSettings": "Filter settings",
      "columnSetting": "Column Setting",
      "recommendSchedule": "Recommend Schedule"
    },
    "button": {
      "viewDetails": "View Details",
      "downloadDetailInfo": "Download details",
      "downloadInvHtml": "Download invoice(html)",
      "apply": "Apply",
      "search": "Search",
      "downloadExcel": "Download (Excel)",
      "columnSetting": "Column settings",
      "viewDefaultFilters": "View default filters",
      "viewOtherFilters": "View other filters",
      "save": "Save",
      "cancel": "Cancel",
      "close": "Close",
      "download": "Download",
      "view": "view",
      "confirmation": "Confirm",
      "selectionComplete": "Selection complete",
      "stopDisplayingWeek": "Stop displaying for a week",
      "legalNotice": "Legal Notice",
      "privacyStatement": "Privacy Statement"
    },
    "paragraph": {
      "noDataDisplay": "There is no data to display.",
      "saved": "Saved.",
      "notSaved": "Not saved",
      "selectUpFive": "You can select up to 5",
      "pleaseSelectContent": "Please select content.",
      "reportCreationFailed": "Report creation failed. Please contact your administrator.",
      "excelDownloadedWait": "Excel is being downloaded. please wait for a moment.",
      "feeExchangeRate": "This fee is estimated by collecting usage records and may differ from the actual billed fee depending on contract terms, exchange rate, rounding method, and whether or not the service provider has confirmed the fee.",
      "feeRoundingMethod": "This fee is estimated by collecting usage records and may differ from the actual billed fee depending on the contract terms, rounding method, and whether or not the service provider has confirmed the fee.",
      "selectTagKey": "Please select tag key in the first place.",
      "selectServiceCategory": "Please select a service category in the first place.",
      "specifyPeriodThreeYears": "When specifying a period, you can inquire for up to 3 months within the last 3 years.",
      "specifyPeriodThreeMonths": "When specifying a period, you can search within the last 3 months.",
      "specifyPeriodPastYear": "When specifying a period, inquiries can be made within the past year."
    },
    "placeholder": {
      "enterSearchTerm": "Please enter your search term."
    },
    "alert": {
      "errorOccur": "An error has occurred.",
      "selectContractForServiceGroupFixed": "Please select a contract so that you can select Service group.",
      "selectContractForTag": "Please select a contract so that you can select Tag.",
      "selectContractForServiceGroup": "Please select a contract so that you can select {value}.",
      "maximumGreaterMinimum": "The maximum value must be greater than the minimum value."
    },
     "tooltip": {
      "recommendedSpot": "Provides detailed information on the recommended spot."
    }
  },
  "dashboard": {
    "monthBillingAmount": "Billing amount in {value}",
    "billingSummary": "Bill summary",
    "includingVAT": "(Inc. VAT)",
    "billedAmountPostPayment": "Actual billed amount (postpaid applied)",
    "billedAmountPrepaid": "Actual billed amount (prepaid applied)",
    "cloudUsageFee": "Cloud usage fee",
    "salesDiscount": "Sales discount",
    "comparisonOfPrevious": "Comparison of the previous month",
    "billingAmount": "Billing Amount",
    "topFiveCharges": "Top 5 charges",
    "byProduct": "By product",
    "byAccount": "By account",
    "commitmentStatus": "Commitment status",
    "coverage": "Coverage",
    "totalSavings": "Total savings",
    "savingsRate": "Savings rate",
    "commitmentRecommendation": "Commitment \nrecommendation",
    "estimatedTotalCoverage": "Estimated total coverage",
    "estimatedMonthlySavings": "Estimated monthly savings",
    "additionalSavings": "Additional savings",
    "resourceSummary": "Resource summary",
    "resourceOptimizationRecommendation": "Resource optimization recommendation",
    "unusedResource": "Unused resource",
    "unit": "unit(s)",
    "aiBasedCostAnalytics": "AI-based cost analytics",
    "costAnomalyDetection": "Cost anomaly detection",
    "costPatternAnalytics": "Cost pattern analytics",
    "patternGuideMessage1": "Compare to past patterns, {value}",
    "patternGuideMessage2": "have detected {value} change",
    "patternGuideMessage3": "in billing costs.",
    "critical": "Critical",
    "important": "Important",
    "normal": "Normal",
    "running": "Running",
    "stopped": "Stopped",
    "etc": "etc"
  },
  "cost": {
    "mainCost": "Cost",
    "billingInvoice": "Billing Invoice",
    "byContract": "By contract",
    "byProduct": "By product",
    "billingMonth": "Billing month",
    "totalNumberBills": "Total number of bills",
    "totalBillAmount": "Total bill amount",
    "comparisonOfPrevious": "Comparison of the previous month",
    "contractSelection": "Contract",
    "billList": "Bill list",
    "monthOfUsage": "Month of usage",
    "contractName": "Contract name",
    "billingAmount": "Billing amount",
    "discountAmount": "Savings",
    "viewContractInfo": "View contract information",
    "billingSummary": "Bill summary",
    "billingSummaryPeriod": "Period of use",
    "periodOfUse": "Period of use",
    "billingDate": "Billing date",
    "exchangeRate": "Exchange rate",
    "fixedExchangeRate": "(Fixed exchange rate)",
    "awsInvoiceDate": "(AWS invoice date)",
    "amountUsed": "Amount used",
    "postpaidBillAmount": "Postpaid bill amount",
    "vatTen": "VAT(10%)",
    "amountDeductedPrepayment":	"Amount deducted from prepayment",
    "viewPostpaidDetails": "View postpaid details",
    "totalDiscountAmount": "Total savings",
    "collapse": "Collapse",
    "expand": "Expand",
    "discountSummary": "Discount Summary",
    "productClassification": "Product classification",
    "amountUsedDiscount": "Amount used before discount",
    "total": "Total",
    "all": "All",
    "byCloudAccount": "By cloud account",
    "byResourceGroup": "By resource group",
    "byService": "By service",
    "byRegion": "By region",
    "byTag": "By tag",
    "byServiceGroup": "By service group",
    "cloudAccountClassification": "Cloud account classification",
    "serviceClassification": "Service classification",
    "regionClassification": "Region classification",
    "tagKey": "Tag key",
    "serviceCategory": "Service category",
    "viewType": "View type",
    "dateRange": "Date range",
    "groupBy": "Group by",
    "aws3DayInvDate": "Based on the AWS 3-day invoice date included in the target period",
    "accountName": "Account name",
    "accountId": "Account ID",
    "subtotal": "Subtotal",
    "filterCustomerCompany":"Filter by customer company.",
    "filterContractName": "Filter by contract name.",
    "filterAwsServiceNames": "Filter based on AWS service names such as AmazonEC2, AmazonCloudFront, etc.",
    "filterAccountId": "Filter by Account ID.",
    "filterRegionCodeNorthEast": "Filter by region code, such as ap-northeast-2.",
    "filterAwsProduct": "Filter by AWS product name, such as AmazonEC2, AmazonCloudFront, etc.",
    "filterCategoryProduct": "Filter by category of product type, such as Alarm, AWS Budgets, and Stopped Instance.",
    "filterSpecificInstance": "Filter by specific instance type, such as t2.micro, m3.medium, etc.",
    "filterUsageDetails":"Filter by usage details, such as BoxUsage:m4.large.",
    "filterPhysicalHardware": "Filter by physical hardware system's processor, such as Intel Xeon Family, AMD EPYC 7R32, etc.",
    "filterSpecificAwsActions": "Filter by specific AWS actions, such as RunInstance.",
    "filterPlatform": "Filter by platform such as Linux or Windows.",
    "filterDatabaseEngine": "Filter by specific database engine, such as Amazon Aurora, MySQL, or Oracle.",
    "filterRateType": "Filter by applicable rate type, such as Usage or BundledDiscount.",
    "filterDistinguishingPurchases": "Filters, by distinguishing between AWS service purchases and AWS Marketplace purchases.",
    "filterServiceGroup": "Filter by service group.",
    "filterAWSKeyValue": "Filters based on a pair of keys and values that serve as metadata for AWS resource components.",
    "filterAzureServiceNames": "Filter based on Azure service names such as VM (Virtual Machine) and SQL Database.",
    "filterBySubscription": "Filter by Subscription.",
    "filterRegionCodeKoreaCentral": "Filter by region code, such as Korea Central.",
    "filterInstanceType": "Filter by specific instance type, such as Standard_D2s_v5, GP_Gen5_2, etc.",
    "filterInstanceGroup": "Filter by specific instance group, such as DSv3 Series.",
    "filterResourceGroup": "Filter by resource group.",
    "filterAzureKeyValue": "Filters based on a pair of keys and values that serve as metadata among Azure resource components.",
    "costPatternAnalysis": "Cost pattern analysis (Top 5 changes)",
    "costLearnsAndAnalyzeMessage1": "Cost pattern analysis learns and analyzes “billing data” every month, so",
    "costLearnsAndAnalyzeMessage2": "the longer the training period, the higher the accuracy.",
    "costLearnsAndAnalyzeMessage3": "This month's bill ({value}) will be provided next month after meticulous analysis.",
    "possibleCausesChange": "Possible causes of change in billing costs for {value}",
    "account": "Account",
    "service": "Service",
    "region": "Region",
    "costOfMonth": "Cost of {value}",
    "avgCost": "Avg. cost",
    "maxCost": "Max. cost",
    "costAnomalyDetection": "Cost Anomaly Detection",
    "sensitivitySettings": "Sensitivity settings",
    "alarmSectionSettings": "Alarm settings",
    "sensitivity": "Sensitivity",
    "reLearnsDaily": "It retrains by analyzing daily usage patterns.",
    "critical": "Critical",
    "important": "Important",
    "normal": "Normal",
    "anomalyCostList": "Anomaly cost detection list",
    "criteriaPredictedActual": "Analysis criteria: AI-Predicted cost VS Actual cost",
    "alarmLevel": "Alarm level",
    "cloud": "Cloud",
    "analysisDate": "Analysis date",
    "detectionMessage": "Detection message",
    "detectionDate": "Detection date",
    "viewingCauses": "Viewing causes",
    "low": "Low",
    "medium": "Medium",
    "high": "High",
    "detectsAnomaliesIssues": "Detects anomalies and issues an alert when the AI predicted cost falls outside the sensitivity range.",
    "sensitivitySlowerAlarms": "If the sensitivity is slower, you will receive fewer alarms; if the sensitivity is higher, you will receive more alarms.",
    "actualCosts": "Actual cost",
    "predictedCost": "Predicted cost",
    "abnormalCost": "Abnormal cost",
    "setAlarmsTiers": "You can set alarms with tiers based on the difference between actual cost and AI-predicted costs.",
    "unit": "unit(s)",
    "alarmDetails": "Alarm details",
    "checkDetailsAlarms": "You can check the details of alarms detected with AI algorithms and identify analysis results and abnormality detection factors.",
    "abnormalCostDetection": "AI anomaly cost detection",
    "anomalyDetectionMethod": "Anomaly detection method",
    "anomalyCostDetected": "When an anomaly cost is detected in two or more AI models, it is derived as an AI anomaly cost.",
    "timeSeriesPredicts": "It is a time series model that predicts trends and seasonality by combining AR (Autoregression) model and MA (Moving Average) model.",
    "timeSeriesGives": "It is a time series model that gives the greatest weight to recent data, and the weight decreases exponentially as historical data increases.",
    "modelUsesPrincipal": "This model uses principal component analysis to find patterns that cause abnormalities and estimates their impact through regression analysis.",
    "fluctuationRate": "Fluctuation rate (change rate)",
    "aiPredictionCost": "AI-Predicted cost",
    "anomalyDetectionFactor": "Anomaly detection factor",
    "anomalyDetectionDisplayed": "Anomaly detection factors are displayed in order of highest ‘impact’ service.",
    "influence": "Influence",
    "rateOfChange": "Rate of change",
    "typeOfUse": "Type of use",
    "work": "Work",
    "totalNumberBillings": "Total number of billings",
    "contractStatus": "Contract status",
    "proceeding": "Proceeding",
    "case": "case(s)",
    "contractExpiration": "Contract expiration",
    "totalContractAmount": "Total contract amount",
    "usageRatePrevious": "Usage rate (previous month)",
    "contractList": "Contract list",
    "contract": "Contract name",
    "manager": "Manager",
    "startDate": "Start date",
    "endDate": "End date",
    "contractAmount": "Contract amount",
    "status": "Status",
    "viewYourBill": "View your bill",
    "term": "Contract period",
    "billingStartDate": "Billing start date",
    "contactInformation": "Manager information",
    "quantity": "Quantity",
    "discountRate": "Discount rate",
    "contractClassification": "Contract classification",
    "contractAgreementSummary": "Contract agreement summary",
    "turn": "Turn",
    "classification": "Classification",
    "contractPeriod": "Contract period",
    "achievementRate": "Achievement rate",
    "achievementTrend": "Achievement trend",
    "contractInformation": "Contract Information",
    "billingContractSummary": "Bill summary of contract",
    "usageAchievementView": "Usage and achievement rates are based on the current fiscal year for annual contracts and the current month for monthly contracts. Details can be confirmed by viewing achievement trends.",
    "chargeName": "Charge Name",
    "usage": "Usage",
    "contractCondition": "Contract condition",
    "billingContractInformation": "Billing Contract Information",
    "validityPeriod": "Validity period",
    "expectedPenalty": "Expected penalty",
    "penalty": "Penalty",
    "commitmentAchivementRateDescription": "The commitment achievement rate is calculated based on the won invoiced each month and may vary depending on the exchange rate conditions at the time of the contract.",
    "postpaidInvoice": "postpaid invoice",
    "postBillingMonth": "post-billing month",
    "postpaidAmount": "Postpaid amount",
    "amount": "Amount:"
  },
  "resource": {
    "usage": "Usage",
    "all": "All",
    "contractAnd": "Contract and",
    "accounts": "account",
    "region": "Region",
    "serviceGroup": "Service group",
    "apply": "Apply",
    "enterSearchTerm": "Please enter your search term.",
    "notConnected": "(Not connected)",
    "connectionStatus": "Connection status",
    "status": "Status",
    "instanceType": "Instance type",
    "engineType": "Engine type",
    "volumeType": "Volume type",
    "loadbalancerType": "Load balancer type",
    "unit": "unit(s)",
    "search": "Search",
    "standardTime": "Standard Time",
    "columnSetting": "Column settings",
    "downloadExcel": "Download (Excel)",
    "resourceID": "Resource ID",
    "resourceName": "Resource name",
    "lifecycle": "Life cycle",
    "launchTime": "Launch time (UTC)",
    "keyName": "Key name",
    "rootVolume": "Root volume",
    "clusterType": "Cluster type",
    "availabilityZone": "AZ",
    "linkedAccount": "Linked account",
    "dbInstanceID": "DB instance ID",
    "dbName": "DB name",
    "dbInstanceType": "DB instance type",
    "storageType": "Storage type",
    "portNumber": "Port number",
    "masterUsername": "Master username",
    "licenseType": "License type",
    "accessType": "Access type",
    "multiAZ": "Multi-AZ",
    "creationTime(UTC)": "Creation time (UTC)",
    "allocatedResources": "Allocated resources",
    "dHCPOptionSet": "DHCP option set",
    "tenancy": "Tenancy",
    "defaultVPC": "Default VPC",
    "volumeSize": "Volume size (GB)",
    "connectedInstance": "Connected instance",
    "system": "System",
    "dNSName": "DNS name",
    "assignedIPv4address": "Assigned IPv4 address",
    "eC2NotRunning": "EC2 is not running",
    "range": "Range",
    "associatedInstanceID": "Associated instance ID",
    "connectionID": "Connection ID",
    "assignmentID": "Assignment ID",
    "networkInterfaceID": "Network interface ID",
    "eNIOwnerAccountID": "ENI owner account ID",
    "updateTime(UTC)": "Update time (UTC)",
    "resourceGroup": "Resource group",
    "domain": "Domain",
    "engineVersion": "Engine version",
    "storage": "Storage(GB)",
    "backupRetentionDays": "Backup retention period",
    "provisioningStatus": "Provisioning status",
    "resourceGuid": "Resource GUID",
    "dDoSProtectionActive": "DDoS protection active",
    "diskType": "Disk type",
    "diskSizeGB": "Disk size(GB)",
    "diskMBpsReadWrite": "Read/write disk(Mbps)",
    "diskIOPSReadWrite": "Read/write disk(IOPS)",
    "resourceType": "Resource type",
    "publicIPAddressVersion": "Public IP address version",
    "ipAddress": "IP Address",
    "idleTimeoutInMinutes": "Idle timeout(minutes)",
    "publicIPAllocationMethod": "Public IP allocation method",
    "period": "Period",
    "daily": "Daily",
    "monthly": "Monthly",
    "performanceTrend": "Performance trend",
    "forCpuUtilization": "For CPU utilization/memory utilization/disk space utilization data, the minimum/maximum/average calculation method changes depending on the period query conditions.",
    "dailyInquiry": "Daily inquiry: Ratio value for minimum/maximum/average of data used during the day",
    "monthlyInquiry": "Monthly inquiry: Ratio value for minimum/maximum/average of data used on a monthly basis",
    "messageVolumeQueue": "For VolumeQueue Length/VolumeRead IOPS/VolumeWrite Bytes/VolumeWrite IOPS data, depending on the period query conditions. \nThe Min/Max/Average calculation method is changed.",
    "columnTerminology": "Column terminology",
    "volumeQueueLength": "Volume queue length",
    "numberPendingDisk": "Number of pending disk operations",
    "volumeQueueExplosions": "Volume queue explosions can slow access and cause poor application performance.",
    "indicateMaxMin": "Indicates the maximum, minimum, and average values ​​of daily measured data.",
    "IOPSOperation": "I/O operations per second (IOPS) of read I/O operations for EBS volumes",
    "numberBytesWrite": "The number of bytes for write I/O operations on EBS volumes",
    "numberAmountData": "This number refers to the amount of data delivered per second by write operations to the EBS volume.",
    "forAvailableMemory": "For available memory/CPU utilization/available storage space/read IOPS/write IOPS data, depending on the period query conditions \nThe Min/Max/Average calculation method is changed.",
    "rdsIOPS": "RDS IOPS",
    "ReadOperations": "Read I/O operations per second (IOPS) for database instance I/O operations.",
    "decimalPointOutput": "If a decimal point is output, it means that operations per second are slow.",
    "iOPSHalf": "IOPS = 0.5, meaning 1 task is completed every 2 seconds",
    "resourcePerformance": "Resource_Performance_",
    "resourceInformation": "Resource information",
    "instanceID": "Instance ID",
    "osType": "OS type",
    "cpuUtilization": "CPU utilization",
    "least": "Least",
    "maximum": "Max.",
    "average": "Avg.",
    "memoryUtilization": "Memory utilization",
    "diskspaceUtilization": "Disk space utilization",
    "accountInformation": "Account information",
    "collectionDate": "Collection date",
    "availableMemory(MB)": "Available memory (MB)",
    "availableStorageSpace": "Available storage space (MB)",
    "readIOPSEA": "Read input/output operations (IOPS) (EA)",
    "writeIOPSEA": "Write input/output operations (IOPS) (EA)",
    "provideUtilizationInfo": "Provides utilization information for MySQL Single Server.",
    "rdsIops": "RDS IOPS(IOPS Request Level): The number of input/output operations per second (IOPS) for database instance I/O operations",
    "havingDecimalPoints": "Having decimal points printed means slower operations per second.",
    "volumnQueueLength": "Volume queue length (number of pending disk operations): The length of the volume queue.",
    "volumnQueueBuildUp": "Volume queues can build up quickly, slowing down access and degrading application performance.",
    "volumnReadIops": "VolumeRead IOPS: The number of input/output operations per second (IOPS) for read I/O operations on EBS volumes",
    "correspondingNumberIndicates": "The corresponding number indicates the amount of data passed per second in write operations to the EBS volumes.",
    "iopsForWriteJobs": "The number of input/output jobs per second (IOPS) for write I/O operations on EBS volumes.",
    "toViewMemory": "To view memory and disk usage, you need to install the Azure Monitor agent in the Azure portal.",
    "networkInput": "Network input(MB)",
    "networkOutput": "Network output",
    "subscriptionInfo": "Subscription information",
    "storageUtilization": "Storage utilization",
    "storageUsage": "Storage usage(MB)",
    "subscriptionName": "Subscription name"
  },
  "optimization": {
    "middleResourceOptimization": "Resource Optimization",
    "resourceDashboard": "Resource Dashboard",
    "contractAnd": "Contracts and",
    "accounts": "accounts",
    "all": "All",
    "enterSearchTerm.": "Please enter your search term.",
    "notConnected": "(Not connected)",
    "region": "Region",
    "serviceGroup": "Service group",
    "cancel": "Cancel",
    "confirm": "Confirm",
    "apply": "Apply",
    "estimatedSavings": "Estimated savings are on an On-Demand basis and may differ from actual charges. (Based on amount used in the last 30 days)",
    "estimatedTotalMonthly": "Estimated monthly savings",
    "expectedMonthlySavings": "Expected monthly savings upon completion of resource cost optimization",
    "forUnusedResources": "Total unused resources targets",
    "rightSizingAll": "Total targets of rightsizing",
    "unusedResources": "Unused resources",
    "unconnectedCloudResources": "Using unconnected cloud resources without regularly checking and removing them can result in unnecessary costs. To manage resources efficiently and prevent wasted costs, we recommend deleting unused resources.",
    "estimatedSavingsResources": "Total estimated savings of unused resources",
    "targetResource": "Target resource",
    "unit": "unit(s)",
    "simpleSavings": "Savings",
    "savings": "savings",
    "processMatching": "The process of matching instance types and sizes to workload performance and capacity requirements at the lowest possible cost.\nIt provides a way to save money by recommending that your instances be appropriately sized without compromising capacity or other requirements.",
    "totalEstimatedSavingsRightsizing": "Total estimated savings of rightsizing",
    "appliedExchangeRate": "Applied exchange rate",
    "upbitExchangeRate": "Upbit Exchange Rates",
    "amountShownEstimate": "Displayed amount is an estimate based on On-Demand pricing and may differ from the actual charges.",
    "estimatedMonthlySavings": "Estimated monthly savings",
    "dependingOnWorkload": "Depending on the usage and pattern of the actual workload, inappropriate recommended options may be displayed, so please review further before deciding whether to optimize.",
    "outUnusedResources": "Out of a total of {{ any }} {{ categories }},\n{{ any }} unused resources found.",
    "notConnectedEc2": "Detached: Not connected to any EC2 instance.",
    "notConnectedVM": "Detached: Not connected to any VM instance.",
    "notWorkingEc2": "The connected EC2 instance is currently inactive or has been terminated.",
    "unusedResourceCases": "Unused resources refer to cases where the 30-day average CPU utilization is less than 1% and the maximum CPU utilization is less than 3%.",
    "resourceId": "Resource ID",
    "resourceName": "Resource name",
    "unusedType": "Unused type",
    "instanceType": "Instance type",
    "operatingSystem": "OS",
    "estimatedCostSavings": "Estimated cost savings\n(30 Days)",
    "linkedAccount": "Linked account",
    "resourceStatus": "Resource status",
    "storageSize": "Storage size (GB)",
    "operationsPerSecond": "I/O operations per second",
    "engine": "Engine",
    "engineVersion": "Engine version",
    "applicableExchangeRate": "Applicable exchange rate",
    "basedExchangeRate": "Based on exchange rate",
    "dependingOnActualWorkload": "Depending on your actual workload usage purpose and pattern, you may see recommended options that are not suitable for you, so you should consider them further and decide whether to optimize them or not.",
    "unUsedResourcesNotSupported": "Unused resources are not supported by this category.",
    "analysisTime": "Analysis time",
    "resourceID": "Resource ID",
    "resourceGroup": "Resource group",
    "diskSizeGB": "Disk size(GB)",
    "ipAddress": "IP Address",
    "awsS3OptiOverview": "AWS S3 Optimization Overview",
    "awsS3Desc1": "AWS S3 is a cost-effective storage service optimized for different access patterns and offers a variety of cost optimization methods.",
    "awsS3Desc2": "There are several ways to reduce costs, but here are some key ways you can apply them.",
    "awsS3StorageClassDesc1": "S3 offers a variety of storage classes to choose from depending on the data access, resiliency, and cost requirements of your workload.",
    "awsS3StorageClassDesc2": "S3 storage classes are specifically built to provide the cheapest storage for different access patterns.",
    "s3StandardDesc": "The most common general-purpose class, it provides highly durable, available, and high-performance object storage for frequently accessed data. S3 Standard offers low latency and lots of throughput.",
    "exampleOfUse": "Example of use",
    "s3StandardExample" : "It is well suited for highly critical, frequently accessed data such as cloud applications, dynamic websites, content delivery, mobile and gaming applications, and big data analytics.",
    "s3IntelligentTiering" : "Reduce storage costs automatically by automatically moving data to the most cost-effective tier based on frequency of access. Least operational burden.",
    "s3IntelligentTieringExample": "It is suitable for data lakes that contain a mixture of data with different usage patterns and are difficult to optimize, or for data where usage patterns are unpredictable.",
    "s3StandardIaDesc": "It's best for data that you don't access frequently, but rather need to access quickly when you need it.",
    "s3StandardIaExample": "Suitable for long-term storage, backup, and disaster recovery data.",
    "s3OneZoneIaDesc": "One Zone-IA is a Standard IA type that is suitable for data that needs to be accessed quickly when needed, but not frequently. It offers lower availability and resilience than Standard IA, but costs approximately 20% less.",
    "s3OneZoneIaExample": "It is good for data that is not critical and is rarely accessed in practice, but needs to be quickly accessible when needed (e.g. temporary files, replicas)",
    "s3GlacierInstantRetrievalDesc": "A storage class that provides the lowest cost storage for long-term data that is accessed infrequently and requires retrieval in milliseconds.",
    "s3GlacierInstantRetrievalExample": "This is suitable for hospital patient data that needs to be processed immediately when needed, even if you don't know when it will be accessed, or Olympic Games-related data that will be accessed every four years.",
    "s3GlacierFlexibleRetrievalDesc": "Suitable for data where you don't need immediate access but want the flexibility of getting large data sets for free.",
    "s3GlacierFlexibleRetrievalExample": "Used for long term backup and disaster recovery.",
    "s3GlacierDeepArchiveDesc": "This is the lowest cost storage class and is suitable for data that needs to be stored long-term but is accessed once or twice a year.",
    "s3GlacierDeepArchiveExample": "It is well suited for customers who store datasets for 7-10 years or more to meet regulatory compliance requirements, especially those in highly regulated industries such as financial services, healthcare, and the public sector.",
    "highAccessHighCost": "High access and high cost",
    "lowAccessLowCost": "Low access and low cost",
    "sevenS3StorageClassSort": "There are seven types of S3 storage classes",
    "sevenS3StorageClassSortDesc1": "The further to the left, the better the storage performance but the higher the cost, whereas the further to the right, the lower the cost but the lower the performance.",
    "sevenS3StorageClassSortDesc2": "Users can optimize costs by choosing the appropriate storage class to match the characteristics of the data they hold.",
    "s3CostOptiGuide": "S3 Cost Optimization Guide",
    "intelligentTieringDesc": "This storage class automatically moves data to the appropriate storage tier based on how frequently it is accessed, providing cost-effective management.",
    "lifeCycleConfig": "Lifecycle Configuration",
    "lifeCycleConfigDesc": "Automatically change storage class or delete data according to data lifecycle configuration; requires lifecycle configuration setting.",
    "optimizingStorageClasses": "Optimizing Storage Classes",
    "optimizingStorageClassesDesc": "Users can directly navigate to their data and manually select the storage class.",
    "advantage": "Advantage",
    "intelligentTieringAdv1": "Frequently accessed data automatically moves to a high-performance tier, providing faster access, while less frequently accessed data moves to a cheaper tier, minimizing costs overall",
    "intelligentTieringAdv2": "Monitors and automatically adjusts data access patterns to minimize manual user intervention and reduce operational burden.",
    "intelligentTieringAdv3": "Rapidly adapt to changing data access patterns and automatically adjust storage tiers to maintain optimal performance and cost at all times.",
    "disadvantage": "Disadvantage",
    "intelligentTieringDisAdv": "Data is automatically migrated to storage tiers so that data that is temporary and requires fast access can be moved to a slower access storage tier.",
    "useCase": "Use Case",
    "intelligentTieringUseCaseExample": "Company C keeps various data in S3 for various data analyses. Depending on the type of data, it may be accessed weekly or once a year. Considering such diverse usage patterns, Company C effectively reduced costs by utilizing S3 Intelligent-Tiering storage to automatically classify data.",
    "lifecycleConfiguration": "Lifecycle configuration",
    "lifecycleConfigDesc": "Automatically change storage class or delete data according to data lifecycle configuration. Requires lifecycle configuration setting.",
    "lifecycleConfigAdv1": "Accurate lifecycle configuration minimizes administrative burden and enables efficient cost management",
    "lifecycleConfigAdv2": "Automatically deleting unused data or moving it to a cheaper storage class reduces operational burden and allows you to effectively manage your data.",
    "lifecycleConfigDisadv1": "Setting up and adjusting lifecycle configurations can be complicated",
    "lifecycleConfigDisadv2": "Incorrectly configured lifecycle configurations can cause data loss and overhead",
    "lifecycleConfigUseCaseExample": "Bank B has rules regarding customer transaction data that must be stored for 10 years. This data is frequently analyzed within a year, but is rarely accessible after that. Considering the characteristics of this data, Bank B set up a lifecycle configuration in which the data is archived in S3 Standard for one year, automatically moved to S3 Glacier Deep Archive after one year, and automatically deleted after 10 years, which enabled efficient data management, reduced operational burden, and reduced costs.",
    "optimizingStorageClassesAdv1": "It works best when users have a detailed understanding of their data and cloud environment.",
    "optimizingStorageClassesAdv2": "Leverage analytics tools such as Storage Class Analysis and S3 Storage Lens for deeper analysis and understanding.",
    "optimizingStorageClassesDisAdv1": "Cost savings can be difficult if users don't understand their data and cloud environments.",
    "optimizingStorageClassesDisAdv2": "If changes in data characteristics or cloud services require a change to the storage class, users must manually proceed with the update.",
    "optimizingStorageClassesDisAdv3": "Initial setup and updates take time and may be subject to errors.",
    "optimizingStorageClassesUseCaseExample1": "Company A finds that they have infrequently accessed data in S3 Standard for long-term storage, backups, and disaster recovery.",
    "optimizingStorageClassesUseCaseExample2": "By switching to S3 Standard-IA, which is suitable for data that is accessed infrequently but requires fast access when necessary, we were able to reduce costs by approximately 20%.",
    "outRightsizingObject": "Out of a total of {{ any }} {{ categories }},\n{{ any }} Rightsizing objects found.",
    "optimizationRecommendationMeans": "Optimization recommendation means that CPU utilization for 30 days satisfies the conditions below.",
    "optimizationRecommendation14": "Optimal recommendations refer to cases where CPU usage or IOPS meet the following conditions for 14 days.",
    "averageUsageRate": "- Average usage rate less than 10%",
    "maximumUsageRate": "- Maximum usage rate less than 50%",
    "averageUtilizationExceed": "- Average utilization exceeds 90% for 8 days",
    "recommendedInstancesPerformance": "- Recommended instances with improved performance",
    "dbConnectionFewer": "- DB connection is 1 or fewer",
    "avgIOPS": "- Average IOPS is 100 or fewer",
    "avgCpuUsage": "- Average CPU usage is 60% or lower",
    "MaxCpuUsage": "- Maximum CPU usage is 60% or lower",
    "avgUsageExceed": "- Average usage exceeds 90% for 4 days",
    "recommendedInstancesSamePrice": "- Recommended instances with improved performance for the same price",
    "utilizationPercentageInstance": "Utilization is a percentage of the actual instance startup time over a 30-day period.",
    "optimizationRecommendations": "Optimization recommendations",
    "current": "Current",
    "recommendation": "Recommendation",
    "rec": "rec",
    "calculationCost": "Calculation cost",
    "period": "Period",
    "commitmentDashboard": "Commitment Dashboard",
    "contractTarget": "Available services status",
    "contractableOnDemand": "Contractable On-Demand conversion amount",
    "contractableEquivalentAmount": "Contractable {value} equivalent amount",
    "TotalAmountConverted": "This is the total amount converted into {value} services for services that can be committed among the services that meet the applied conditions.",
    "serviceEligibleCoverage": "Available services for commitments",
    "showTotalAmount": "Among the services that meet the applied conditions, it shows the total amount of {value} usage costs by contract-applicable service and contract type.",
    "viewDetails": "View details",
    "contractType": "Type",
    "onDemand": "On-Demand",
    "contractablePayAsYouGo": "Conversion amount of contractable pay-as-you-go system",
    "totalPayAsYouGo": "This is the total amount converted into a pay-as-you-go service for services that can be committed among the services that meet the applied conditions.",
    "showPayAsYouGo": "Among the services that meet the applied conditions, it shows the total cost of using the pay-as-you-go system by service and contract type for which a contract can be applied.",
    "valueContractCost": "{value} cost",
    "payAsYouGoSystem": "PAYG system",
    "payAsYouGoCosts": "PAYG cost",
    "contractUsageStatus": "Commitment status",
    "savingsContractApplication": "Savings from contract application",
    "contractedSavingsApplied": "This is the committed savings corresponding to the terms and conditions applied.",
    "contractCoverage": "Commitment coverage",
    "displayRatio": "Displays the ratio of the ‘{value} conversion amount available for agreement’ corresponding to the applied conditions and the {value} conversion amount of the usage amount to which the agreement is applied.",
    "displayVolumeRate": "Displays the ratio of the ‘volume-rate conversion amount available for agreement’ corresponding to the applied conditions and the volume-rate conversion amount of the usage amount to which the agreement is applied.",
    "contractRecommendation": "Recommendation",
    "estimatedSavingsApplying": "Estimated savings from recommendations",
    "estimatedSavingsPurchasing": "Estimated savings when purchasing recommended commitments for selected {value} and service. Recommended contract refers to the optimal contract selected by analyzing usage over the past 30 days.",
    "estimatedSavingsIf": "Estimated savings if you purchase the recommended pay-per-use and service-specific subscriptions selected. Recommended contract refers to the optimal contract selected by analyzing usage over the past 30 days.",
    "expectedContractCoverage": "Expected coverage from recommendations",
    "coverageExpectedBased": "This is the coverage expected based on the account and service selected if you purchase the recommended plan based on an analysis of your usage over the past 30 days.",
    "computeSavingsPlans": "For EC2, we recommend Compute Savings Plans, which are the most flexible option.",
    "analysisPeriod": "Analysis period",
    "thirtyDays": "30 days",
    "month": "/month",
    "contractPurchaseStatus": "Commitment purchase status",
    "providesContractPurchased": "Provides the number of contracts purchased for each service.",
    "contractScheduledTo": "If there are contracts scheduled to expire within the next 60 days (default) based on the inquiry date, the ‘Number of contracts scheduled to expire’ is displayed.",
    "contractExpirationDateApproaching": "If your contract expiration date is approaching, plan to purchase additional contracts.",
    "expired": "About to expire",
    "case": "case(s)",
    "expandAll": "Expand All",
    "collapse": "Collapse",
    "contractTrendsByService": "Commitment trends by service",
    "provideConversionCost": "Provides {value} conversion cost and savings for each service.",
    "ManageYourContractUsage": "Manage your contract usage in a comprehensive manner.",
    "searchSelectItems": "You can search by selecting only the items you want to search from the legend below the trend chart.",
    "conversionCost": "charge",
    "etc": "ETC",
    "summaryCommitmentByService": "Summary of commitments by service",
    "showsCostContractSavings": "It shows the cost of use for each service eligible for contract and the savings resulting from the contract.",
    "theLowerTheMoreCost": "The lower your {value} cost (rate), the more you save.",
    "contractPurchasingCost": "Consider purchasing a contract for a service with a low {value} cost (rate).",
    "theLowerTheMorePayAsYouGoCost": "The lower the pay-as-you-go cost (rate), the more you can save money.",
    "contractPurchasingPayAsYouGo": "Consider contract purchasing for services with low pay-as-you-go costs (rates).",
    "costStructureType": "Cost structure by type",
    "costByType": "Cost by type",
    "spOnDemandCost": "SP On-Demand conversion cost",
    "percentageTotalCost": "Percentage of total cost",
    "totalCost": "Total cost",
    "savingsByType": "Savings by type",
    "savingsRate": "Savings rate",
    "reservationsPayAsYouGoCosts": "Reservations PAYG conversion cost",
    "totalSavings": "Total savings",
    "service": "Service",
    "uncommittedExpenses": "Uncommitted cost",
    "cost": "cost",
    "rIOnDemandCost": "RI On-Demand conversion cost",
    "onDemandCosts": "On-Demand cost",
    "commitmentType": "Commitment type",
    "commitmentEligibleUsage": "Available services {value} usage",
    "commitmentEligibleServices": "Available services for commitments",
    "commitmentEligiblePayAsYouGoUsage": "Commitment Eligible Pay-As-You-Go Usage",
    "coverage": "Coverage",
    "coverageContracted": "Coverage = 100 × (CommittedUse {value} Conversion Amount ÷ Total Cost)",
    "CoverageContractedUsageFee": "Coverage = 100 × (Committedusage fee converted amount ÷ Total cost)",
    "valueCoverageContractedCommStatus": "Coverage = 100 x ({valueName} {valueTitle} conversion cost ÷ total cost)",
    "determineCauseLowCoverage": "Determine the cause of low coverage.",
    "expirationAdditionIncreased": "1. Expiration of existing contract \n2. Addition of new account \n3. Increased usage",
    "reviewRecommendationsMaximizeSavings": "Review our recommendations to maximize your savings.",
    "commitmentsBeingApplied": "Commitments are being efficiently applied.",
    "expectedContractCoverageRecommendation": "Expected coverage from recommendations",
    "currentContractCoverage": "Current coverage",
    "contractNotApplied": "Contract not applied",
    "valueCostTrends": "Cost trends for {value} usage",
    "payAsYouGoCostTrends": "Pay-as-you-go cost trends",
    "valueShowsChangeTrends": "It shows the change trends in contractable {value} usage amount and committed {value} conversion amount.",
    "showsTrendsChangesVolumetric": "It shows trends in changes in the amount of contractable volumetric usage and the converted amount of committed volumetric usage.",
    "valueUsageAmount": "The contractable {value} usage amount refers to the {value} usage amount of services for which a contract is applicable among services to which conditions apply.",
    "payAsYouGoUsageAmount": "The negotiable pay-as-you-go usage amount refers to the usage amount based on the pay-as-you-go system for services to which a contract is applicable among services to which conditions apply.",
    "valueContractUsage": "The contract usage {value} conversion amount refers to the amount converted from the committed usage amount to the {value} usage amount.",
    "contractableOnDemandUsageAmount": "Available services On-Demand usage",
    "commitmentAppliedEquivalentAmount": "{value} conversion amount",
    "commitmentAppliedPayAsYouGoEquivalentAmount": "Commitment Applied Pay-As-You-Go Equivalent Amount",
    "usageTrendDetails": "Usage trend details",
    "usageTrendExcel": "usage_trend",
    "detailsEligibleContract": "Details of available services for commitments",
    "providesDetailedInformation": "Provides detailed information on what can be pledged.",
    "considerPurchasingContract": "Consider purchasing a contract for services with 0% or low coverage.",
    "findPurchasingApplyingContract": "Find out if you are purchasing and applying enough contracts.",
    "serviceType": "Service type",
    "instanceFamily": "Instance family",
    "contractedOnDemandConversionCost": "On-Demand conversion amount",
    "subscriptionName": "Subscription name",
    "name": "Name",
    "instanceFlexibilityGroup": "Instance flexibility group",
    "contractedPayAsYouGoSystemCost": "Committed PAYG system conversion cost",
    "detailsEligibleTargets": "Details of eligible targets",
    "detailedInformationEligibleTargets": "Detailed information on eligible targets",
    "purchaseType": "Purchase type",
    "savingsStatus": "Savings status",
    "valueSavingsContracted": "Savings: Committed usage {value} conversion cost minus committed purchase cost",
    "savingsAmountExcluding": "Savings amount: amount excluding the committed purchase cost from the committed usage fee conversion cost",
    "valueSavingsFormulaOne": "Savings = Committed Use {value} Converted Cost - Committed Purchase Cost",
    "savingsFormularTwo": "Savings = Committed pay-per-use conversion cost – Committed purchase cost",
    "valueSavingsRate": "Savings rate: Ratio of savings compared to committed use {value} conversion cost",
    "savingsRatePayAsYouGo": "Savings rate: Ratio of savings compared to committed usage cost converted to pay-as-you-go system",
    "valueSavingsRateFormular": "Savings rate = 100 * (savings / committed {value} conversion cost)",
    "savingsRatePayAsYouGoFormular": "Savings rate = 100 * (savings / committed PAYG system conversion cost)",
    "utilization": "Utilization",
    "utilizationFormular": "Utilization = 100 x (Commitment Used ÷ Commitment)",
    "findOutWhatCausing": "Find out what's causing your low utilization.",
    "reduceChangeInstanceType": "1. Reduce instance usage 2. Change instance type in purchase commitment",
    "necessaryCheckContractUsage": "It is necessary to check contract usage details for more efficient operation.",
    "usingContractsEfficiently": "We are using our contracts efficiently.",
    "commitment": "Commitment",
    "savingsRateTrend": "Savings rate trend",
    "usageRateTrend": "Usage rate trend",
    "coverageTrend": "Coverage trend",
    "trendChart": "Trend chart",
    "valueByCommitting": "By committing to the selected period, you save this percentage compared to {value}.",
    "byCommittingPayAsYouGo": "By committing to a contract for the selected period, you save this percentage compared to pay-as-you-go.",
    "percentageContractsDuring": "This percentage of the contracts purchased during the selected period has been exhausted.",
    "percentageCommitmentIOverall": "This percentage commitment is applied to your overall instance usage for the selected period.",
    "daily": "Daily",
    "weekly": "Weekly",
    "monthly": "Monthly",
    "coverageRate": "Coverage rate",
    "dateOfUse": "Date of use",
    "dateOfUseStartDate": "Date of use (parking start date)",
    "contractCost": "Contract cost",
    "commitmentCostsUsed": "Commitment Costs Used",
    "valueCommitmentConversionCost": "Commitment Used {value} Conversion Cost",
    "PayAsYouGoConversionCostUsed": "Contractual pay-as-you-go conversion cost used",
    "onDemandAmount": "On-Demand Amount",
    "payAsyouGoAmount": "PAYG amount",
    "contractCoverageRate": "Commitment coverage rate",
    "contractStatusChart": "Contract Status Chart",
    "purchase": "Purchase",
    "use": "Use",
    "history": "history",
    "platform": "Platform",
    "numberOfRI": "Number of RIs",
    "paymentOptions": "Payment options",
    "status": "Status",
    "expirationDate": "Expiration date",
    "days": "days",
    "year": "year(s)",
    "startDateUTC": "Start date (UTC)",
    "endDateUTC": "End date (UTC)",
    "hourlyCommitment": "Hourly commitment",
    "prePaidCost": "Prepaid cost",
    "prePaidCostHour": "Prepaid cost (per hour)",
    "postpaidCost": "Postpaid cost",
    "postpaidCostHour": "Postpaid cost (per hour)",
    "instanceTenancy": "Instance tenancy",
    "multipleAvailabilityZones": "Multiple availability zones",
    "commitmentUsed": "Commitment used",
    "onDemandConversionCost": "On-Demand conversion cost",
    "payAsYouGoConversionCost": "Pay-as-you-go conversion cost",
    "reservation": "Reservation",
    "range": "Range",
    "quantity": "Quantity",
    "purchaseDate": "Purchase date",
    "oneYear": "1 year",
    "threeYears": "3 years",
    "billingCycle": "Billing cycle",
    "prepayment": "Prepayment",
    "contractCostPrepaid": "Contract cost (prepaid)",
    "contractCostPostpaid": "Contract cost (postpaid)",
    "variableType": "Variable type",
    "viewOurRecommendations": "View recommendations",
    "valueContractApplication": "Contract application {value} conversion amount",
    "valueCurrentcommitment": "Current commitment {value} conversion cost",
    "usageTrendDetailExcel": "usage trend details",
    "reducedCost": "Reduced costs",
    "valueCommittedEquivalentAmount": "Committed {value} Equivalent Amount",
    "everyMonth": "every month",
    "contractStatusDetails": "Contract status details",
    "dataAnalysisPeriod": "Data analysis period",
    "contractOption": "Commitment option",
    "commitmentPurchaseOption": "Commitment purchase option",
    "recommendOptionNoUpfrontCost": "We recommend an option with no upfront costs and a short contract period, so it is less burdensome.",
    "lowestPrice": "lowest price",
    "lowestPriceOption": "This is the lowest price option with the highest discount.",
    "mostUsed": "Most used",
    "optionHighestPurchases": "Option based on highest number of purchases (commitment size).",
    "userSelection": "User selection",
    "checkOutOptionsPrepay": "Check out various options such as contract period, prepayment, etc.",
    "recommendOptionShortContract": "We recommend an option that has a short contract period and a shared contract scope, making it less burdensome.",
    "checkOutOptionsScope": "Check out various options including contract period and scope.",
    "contractInquiry": "Contract inquiry",
    "fourTeenDays": "14 days",
    "sixtyDays": "60 days",
    "sevenDays": "7 days",
    "hello": "Hello.",
    "inquiryFunctionPrepared": "The 1:1 inquiry function is being prepared for reorganization.",
    "anyQuestionsEmail": "If you have any questions, please email cmp-help@sktelecom.com.",
    "thankYou": "Thank you.",
    "noRecommendedOptions": "There are no recommended options.",
    "additionalMonthlySavingsExpected": "Additional monthly expected savings",
    "expectedSavingsRecommendationsApplied": "Expected savings rate",
    "expectedTotalCoverage": "Expected total coverage VS Current cost",
    "additionalCoverageRecommended": "Additional coverage",
    "monthlyCostAfterPurchase": "Cost after purchase",
    "recommendedDetails": "Recommended details",
    "provideDetailedInformation": "We provide detailed information on recommended contracts and savings information after purchase.",
    "account": "Account",
    "committedAmountHour": "Hourly commitment",
    "monthlyOnDemandCost": "Monthly On-Demand cost",
    "databaseEngine": "Database engine",
    "cacheEngine": "Cache engine",
    "commitmentRecommendationDetails": "Commitment recommendation details",
    "none": "None",
    "expectedContractCoverageRate": "Expected coverage",
    "selectReservationsOption": "Select the reservations option",
    "periodDesc": "Period : 3-year plan offers higher savings and lower costs than 1-year plan",
    "rangeDesc": "Range : During public holidays, the promised savings/savings rate may be higher and the cost lower than a single subscription.",
    "spRiDesc1": "View payment options, contract terms, savings based on purchase type, and monthly cost information.",
    "spRiDesc2": "Once you select an option and apply it, it will be reflected in the recommendation analysis results.",
    "azureRIDesc1": "View reservation scope, savings over contract period, and monthly fee information.",
    "totalCostReservation": "The total cost of Reservations regardless of payment option (prepaid, monthly) is the same.",
    "reservationRangeHandle": "A reservation range can handle one subscription or multiple subscriptions",
    "sharedReservationDiscount": "Shared: The reservation discount is applied to the appropriate subscription within the billing context.",
    "singleSubscription": "Single subscription: The reservation discount applies to matching resources in the selected subscription.",
    "renewYourCoverage": "You can renew your coverage after purchase",
    "prepaidExpenses": "Prepaid Expenses",
    "expectedReductionRate": "Expected reduction rate per month",
    "monthlyCost": "Monthly cost",
    "costOptimization": "Cost Optimization",
    "recForAction": "Action recommendation",
    "reviewRecommendation": "Review recommendation",
    "normal": "Normal",
    "excludedItems": "Excluded items",
    "actionsRecommended": "Actions are recommended for \nany problems found.",
    "reviewIssuesFound": "Review of any issues found is recommended.",
    "noIssuesFound": "No issues found.",
    "itemExcludedInspection": "This item is excluded from the user's direct inspection in the AWS console.",
    "clickOnNumbers": "Click on the numbers for each scan type to see recommendations and targets to help reduce costs in your AWS account.",
    "inspectionType": "Inspection type",
    "search": "Search",
    "renewalCycle": "Renewal cycle",
    "trustedAdvisorInspectionResults": "Trusted Advisor inspection results are updated once a day, and times may vary depending on the diagnosis.",
    "testResults": "Test results",
    "diagnosisTime": "Diagnosis time (KST)",
    "unclassified": "Unclassified",
    "errorHasOccurred": "An error has occurred.",
    "errorOccurredContact": "An error has occurred. Please contact your administrator.",
    "noDataExist": "Data does not exist.",
    "autospExcludedDesc": "Services applied AutoSP (Compute, EC2) are excluded from coverage calculations and recommendations."
  },
  "support": {
    "classification": "Classification",
    "title": "Title",
    "check": "Hits",
    "registrationDate": "Registration date",
    "noticeListPage": "To the notice list page",
    "attachedFile": "Attached file",
    "noPreviousPosts": "There are no previous posts",
    "noNextPosts": "There are no next posts.",
    "hello": "Hello.",
    "inquiryFunctionPrepared": "The 1:1 inquiry function is being prepared for reorganization.",
    "anyQuestionsEmail": "If you have any questions, please email cmp-help@sktelecom.com.",
    "thankYou": "Thank you."
  },
  "notify": {
    "notify": "Notification",
    "notiHistory": "Notification history",
    "notiTypeInfo": "Notification type information",
    "clickNotiContent": "When you click the notification content, you will be directed to the details screen.",
    "baseDate": "Base date",
    "coverageCriteriaNoti": "Coverage criteria notifications",
    "notiBelowSeventyCoverage": "Notification below 70% coverage (default)",
    "oppoCostIncrease": "Opportunity costs may increase as coverage decreases due to expiration of existing contracts or increased usage.",
    "analyzeCauseChanges": "Analyze the cause of changes through menus such as contract target status, contract usage status, and Cost Explorer.",
    "reviewAdditionalWays": "Review additional ways to save through our Contract Recommendations menu.",
    "notiBasedUtilization": "Notifications based on utilization",
    "notiUsageRate": "Notification of usage rate less than 70% (default) / Notification of savings less than 0 won",
    "reducedResourceUse": "Reduced resource use may result in lower committed utilization and savings rates.",
    "contractRecommendNoti": "Contract recommendation notification",
    "notiContractRecommendation": "Notification of contract recommendation for less than 80% coverage (basic)",
    "considerWaysSaveMoney": "Consider ways to save money by purchasing additional commitments.",
    "contractExpireNoti": "Contract expiration notification",
    "notiSixtyDays": "Notification 60 days before contract expiration (default)",
    "checkExpiringContracts": "Check your expiring contracts through the contract status menu.",
    "reviewContractPurchases": "Please review contract purchases in advance through the contract recommendation menu.",
    "unusedResourceNoti": "Unused resource notification",
    "notiUnusedResources": "Notification when unused resources are detected",
    "checkResourcesUsedInefficiently": "Check the resources being used inefficiently through the unused resources menu.",
    "rightsizingNotice": "Rightsizing Notice",
    "notiRightsizingTarget": "Notification when Rightsizing target is detected",
    "recommendEfficientResourceTypes": "We recommend more efficient resource types through the Rightsizing menu.",
    "abnormalCostDetection": "Abnormal cost detection notification",
    "notiAbnormalCosts": "Notification when abnormal costs are detected",
    "detectAnomalousCost": "Detects anomalous costs due to unusual usage patterns by applying AI detection sensitivity to \"cloud usage\" and \"cost\" data.",
    "cloudUsageAndCostData": "“Cloud usage” and “cost” data are used to detect abnormal costs from unusual usage patterns based on AI detection sensitivity.",
    "notiType": "Type",
    "usageRateStandard": "Usage rate",
    "contractRecommendation": "Recommendation",
    "coverageStandards": "Coverage",
    "contractExpireDate": "Expiration",
    "notiContent": "Notification details",
    "accountName": "Account name",
    "account": "Account ID"
  },
  "setting": {
    "serviceCategory": "Service Category",
    "enterServiceCategoryName": "Enter the service category name.",
    "add": "Add",
    "serviceCategoryNameExists": "This is a service category name that already exists.",
    "serviceCategoryAdded": "Service category has been added.",
    "youSureDeleteServiceCategory": "Are you sure you want to delete the service category? \nUpon deletion, the service group and associated account are deleted.",
    "serviceCategoryDeleted": "The service category has been deleted.",
    "serviceCategoryName": "Name",
    "numberConnectedServiceGroups": "Linked service groups",
    "management": "Management",
    "serviceGroup": "Service group",
    "enterServiceGroupName": "Enter the service group name.",
    "serviceGroupNameExists": "This is a service group name that already exists.",
    "check": "check",
    "youSureDeleteServiceGroup": "Are you sure you want to delete the service group? \nWhen deleted, the linked account will be deleted.",
    "serviceGroupDeleted": "The service group has been deleted.",
    "serviceGroupAdded": "Service group has been added.",
    "serviceGroupName": "Name",
    "numberLinkedAccounts": "Linked accounts",
    "linkedAccount": "Linked account",
    "save": "Save",
    "connectionAccountSaved": "The connection account has been saved to the service group.",
    "connectionGroupName": "Linked group",
    "errorOccurredContact": "An error has occurred. Please contact your administrator.",
    "accountName": "Name",
    "unclassified": "Unclassified",
    "accountId": "Account ID",
    "status": "Status",
    "registrationDate": "Registration date",
    "normal": "Normal",
    "error": "Error",
    "unregistered": "Unregistered",
    "application": "Application",
    "appRegist": "Application registration",
    "allAppAffect": "All applications that affect subscriptions in your entitlement are displayed.",
    "contract": "Contract",
    "applicationId": "Application ID",
    "remarksExplanation": "Remarks (explanation)",
    "numberLinkedSubscriptions": "Linked subscriptions",
    "clientPasswordExpiration": "Client password expiration",
    "expired": "Expired",
    "updatedDate": "Updated date",
    "firstLinkedDate": "First linked date",
    "recentLinkedDate": "Recent Linked Date",
    "iAMStatus": "IAM status",
    "notiFeedSent": "A notification feed will be sent at 13:00 on the day of the week set as the notification receiving email.",
    "notiSetChange": "Notification On/Off can be set all or individually, and the change will take effect from the next day.",
    "notiReceivedEmail": "Notification receiving email",
    "editEmail": "Edit email",
    "enterEmail": "Please enter your e-mail",
    "allNotiOnOff": "All notifications On/Off",
    "cancel": "Cancel",
    "mon": "MON",
    "tue": "TUE",
    "wed": "WED",
    "thr": "THR",
    "fri": "FRI",
    "sat": "SAT",
    "sun": "SUN",
    "notiEmailModified": "The notification email address has been modified.",
    "notiSettingsModified": "Notification settings have been modified.",
    "selectOneDayWeek": "Please select at least one day of the week.",
    "selectUpFiveFilter": "You can select up to five default filters and the most recently saved settings are retained.",
    "default": "Default",
    "resourceType": "Resource type",
    "platformType": "Platform type",
    "costType": "Cost type",
    "customType": "Custom type",
    "valueSelectFilter": "select {value}",
    "accountDelete": "Delete",
    "accountRegister": "Register",
    "update": "Update",
    "delete": "Delete",
    "inquiry": "Inquiry",
    "updateCurrentApp": "Do you want to update your current application?",
    "appUpdate": "Application update",
    "appDelete": "Application delete",
    "appRegistration": "Application registration",
    "appId": "Application ID",
    "enterAppId": "Please enter the application ID",
    "tenantId": "Tenant ID",
    "enterTenantId": "Please enter the tenant ID",
    "clientSecretValue": "Client secret value",
    "enterClientSecret": "Please enter the client secret value.",
    "remarks": "remarks",
    "enterRemark": "Please enter a remark",
    "updateRemark": "Update remark",
    "loadSubscriptions": "Load subscriptions",
    "remarksSaved": "Remarks saved.",
    "goBackApplications": "Do you want to go back to the list of applications?",
    "subscriptionName": "Subscription name",
    "generateClientSecretValue": "How to generate a Client secret value",
    "selectNewClientSecret": "From the Certificates & secrets menu, select the New client secret item.",
    "checkSecretPassword": "Check the secret password in the Certificates & secrets menu.",
    "deleteCurrentApp": "Do you want to delete the current application?",
    "appInfo": "Application Information",
    "deleteAppAzure": "How to delete an application from the Azure portal",
    "followGuideDeleteApp": "Follow the guide below to remove the Entra Application and subscription permissions from the Azure portal, then click Delete Application at the bottom to complete the application delete.",
    "warningAppDelete": "WARNING: Deleting an application will also stop the application from being tracked for any other subscriptions that have subscriptions associated with it.",
    "selectAppDelete": "From the App Registrations menu, select the application you want to delete.",
    "deleteButtonOVerview": "Click on the Delete button in the Overview menu, then click on the Delete button in the right panel.",
    "deleteSubscriptionPrivileges": "Delete subscription privileges",
    "selectSubscriptionMenu": "In the list of all services, select the Subscriptions menu.",
    "removeReadPermission": "For each subscription where you granted permissions, remove the read permission from the Access Control (IAM) menu.",
    "registerNewApp": "Do you want to register a new application?",
    "createAzureApp": "If you're new to creating Azure applications, you can follow our step-by-step guide to get started.",
    "selectQuickRegistration": "If you want to proceed easily without a guide, select [Quick Registration] and proceed.",
    "stepByStepGuide": "Step-by-step guide",
    "quickRegistration": "Quick registration",
    "contractSelect": "Select contract",
    "selectContract": "Select the contract for which you want to register your application.",
    "enterEntraId": "Enter the Entra ID menu",
    "azurePortal": "Azure portal",
    "createNewApp": "Creating a new application",
    "clickNewRegistration": "In the App Registrations menu, click New Registration entry.",
    "clickRegisterButton": "Once you have created a name for the application you want to register, click the Register button to finish.",
    "before": "Before",
    "next": "Next",
    "checkId": "Check ID",
    "findAppId": "In the Overview menu, find your Application (client) ID and Directory (tenant) ID, then fill them in the fields below.",
    "apiAuth": "API Authorization",
    "apiPermission": "From the API permissions menu, select Add a permission and then select the Azure Service Management entry.",
    "verifyClientPassword": "Verify the client password",
    "selectNewClient": "Select the new client secret item from the certificates & secrets menu.",
    "clientPassword": "Client password",
    "enterClientPassword": "Enter the value of the client password",
    "grantSubscriptionAppRole": "Granting subscription-specific application roles",
    "selectSubscriptionsMenu": "In the full menu, select the Subscriptions menu.",
    "selectsubscriptionRole": "Select the subscription you want to grant a role to, then select the Add role assignment option in the Access control (I AM) menu.",
    "selectReaderPermission": "Select [Reader] permission and click [Next].",
    "searchAddApp": "After clicking Select members, search for and add the applications you have granted permissions to in the right panel.",
    "completeAuthRegistration": "Complete the authorization registration.",
    "repeatEachSubscription": "Repeat for each linked subscription. Continue after completion.",
    "checkLinkedSubscription": "Checking for linked subscriptions",
    "loadingSubscription": "Loading Subscriptions",
    "appCollectData": "Registered applications collect data for the following subscriptions:",
    "describeApp": "Describe your application (optional)",
    "appDetails": "Application Details",
    "expireDate": "Expiration date",
    "listCompleteSubscription": "A list of the complete subscriptions assigned to the application. Non-privileged subscriptions are greyed out.",
    "contractName": "Contract",
    "registFailed": "Registration failed. Please contact your administrator.",
    "registAccount": "Would you like to register an account?",
    "externalIdRequired": "External ID required.",
    "enterRoleArn": "Enter the role ARN",
    "basicInfo": "Basic information",
    "accountName1": "Account name",
    "howToGenerate": "How to generate",
    "followStepGuide": "If this is your first time creating a role ARN, you can follow the step-by-step guide to get started.",
    "selectQuickCreation": "If you want to proceed quickly and without guidance, select Quick Creation.",
    "stepGuide": "Step-by-step guide",
    "quickCreation": "quick creation",
    "connectAwsCloudFormation": "Connect to AWS CloudFormation",
    "createStack": "Creating a stack",
    "stackGenerationFollowing": "On the Stacks screen, click Create stack > [With new resources (standard)] to create a stack.",
    "noRunningStack": "If there are no currently running stacks",
    "clickCreateStack": "In the AWS CloudFormation console, click Create stack.",
    "currentlyRunningStack": "If there is a currently running stack",
    "createStackScreen": "On the Stacks screen, click Create Stack > Use New Resource (Standard) to create a stack.",
    "enterTemplateSpecInfo": "Enter template specification information",
    "selectAmazonS3": "On the Specify Template screen, select the Amazon S3 URL entry, enter the URL in the input field, and click the Next button.",
    "templateUrl": "Template URL",
    "enterTemplateUrl": "Enter the template URL",
    "copy": "copy",
    "enterStackDetails": "Enter the stack details",
    "afterEnterDetail": "Enter a Stack name and ExternalId.",
    "externalAcccountFilled": "The ExternalAccount will be automatically filled in with your account information, and for ExternalId, copy and paste your external ID.",
    "externalId": "External ID",
    "enterExternalId": "Please enter external ID",
    "settingStackOptions":  "Setting stack options",
    "clickNextButton": "Click the [Next] button at the bottom right of the screen.",
    "checkInputItems": "Check the input items on the review screen and create a stack",
    "checkCheckBox": "Check the input items on the review screen, scroll down, select the [I acknowledge that AWS CloudFormation can create IAM resources with custom names] check box, and press the [Transfer] button to create the stack.",
    "roleArnInput": "Role ARN Input",
    "clickStackCreated": "In the stack list, click the stack you created, and then click Physical ID in the Resources tab.",
    "roleArn": "Role ARN",
    "clickPhysicalId": "Click the Physical ID entry and when the summary screen appears, click the Copy to clipboard icon for Role ARN to copy the Role ARN value and paste it into the Role ARN input field under Configurations.",
    "youDeleteStack": "Did you delete the stack from the AWS console?",
    "clickOkAccountRemoved": "Click OK and your account will be removed from the Cloud Radar > AWS Account Registrations list.",
    "accountInformation": "Account information",
    "deleteAccountInfo": "Delete account information",
    "checkStack": "Check the stack",
    "clickStackDelete": "Click the stack you want to delete from the stack list, and then click Physical ID in the Resources tab.",
    "clickPhysicalIdCheck": "When the summary screen appears after clicking the Physical ID field, please check whether the Role ARN information is the same as the existing registration information.",
    "deleteStack": "Delete stack",
    "checkStackDelete": "In the stack list, check the stack you want to delete and click the Delete button."
  },
  "etc": {
    "loginSettings": "Login Settings",
    "mfaReset": "MFA reset",
    "logout": "Logout",
    "errorOccurredContact": "An error has occurred. Please contact your administrator."
  },
  "advisor": {
    "recommendation": "Spot Recommendation",
    "status": "Spot Usage Status",
    "estimatedTotalMonthly":"Estimated monthly savings",
    "recommendationOption": {
      "title": "Recommendation Options",
      "sameType": "Same Type",
      "sameTypeDes": "Recommend based on the same type of resource you are currently using.",
      "costPriority": "Cost First",
      "costPriorityDes": "This option prioritizes the Spot that save the most money.",
      "stabilityFirst": "Stability First",
      "stabilityFirstDes": "This option prioritizes the Spot that low interruption.."
    },
    "detailTable": {
      "resourceID": "Resource ID",
      "instanceSeparation": "Instance classification",
      "memory": "Memory",
      "GPUMemory": "GPU Memory",
      "CPUArchitecture": "CPU Architecture",
      "acceleratorType": "GPU Type",
      "instanceType": "Instance Type",
      "present": "The present",
      "recommendation": "Recommendation",
      "onDemandCost": "OnDemand Cost",
      "estimatedSavings": "Estimated Savings",
      "estimatedSavingsRate": "Estimated Savings Rate",
      "typeOfService": "Service",
      "operatingSystem": "Operating System",
      "moreOptimization" : "More Optimization",
      "region": "Region",
      "availableArea": "Availability Zone",
      "consolidatedAccount": "Linked account",
      "spotComparison": {
        "title": "Recommendation Spot Comparison",
        "won": "₩",
        "oneWeek": "1 week",
        "oneMonth": "1 month",
        "threeMonths": "3 months",
        "sortation": "Sortation",
        "recommendationOptions": "Recommendation Options",
        "instanceType": "Instance Type",
        "region": "Region",
        "availableZone": "Available area",
        "operateSys": "Operating system",
        "vCPU": "vCPU",
        "CPUMemory": "CPU Memory",
        "GPUType": "GPU Type",
        "GPUMemory": "GPU Memory",
        "interruptionFrequency": "Interruption frequency",
        "currentRate": "Spot rate (h)",
        "averageAmount": "Average amount",
        "averageSavingsRate": "Average Savings Rate",
        "estimateCost": "Estimated Cost",
        "currentInformation": "Current Information",
        "recommendedSpot": "Recommended Spot",
        "customization": "Customization",
        "sameType": "Same Type",
        "costPriority": "Cost Priority",
        "stabilityFirst": "Stability First",
        "onDemand": "On-Demand",
        "customizationSpotInstance": "Customization Spot Instance",
        "fareHistory": "Fare History",
        "choice": "Choice",
        "initialization": "Initialization",
        "additional": "Additional",
        "periodTimeMessage": "This is the information that was viewed by the time period",
        "popUpNote": "The average amount and savings rate are figures for the selected period"
      },
      "spotTooltip": {
        "spotCost": "Spot Cost (h)",
        "spotOnDemain": "On-Demand Cost (h)"
      },
      "excelTitle": "Spot Recommendation History"
    },
    "estimatedMonthSave": {
      "amountOnDemandUsage": "Amount of on-demand usage covered",
      "amountOnDemandUsageDes": "This is the amount of Instance used in the last 30 days that can be converted to Spot Instance among the Instances being used on demand.",
      "estimatedSaveSpot": "Estimated savings from spot application",
      "estimatedSaveSpotDes": "This is the estimated amount of savings you can save if you convert an instance that can be converted to a Spot Instance during an on-demand instance.",
      "estimatedSaveRate": "Estimated Savings Rate",
      "estimatedSaveRateDes":"The ratio of savings to on-demand usage to Spot Instance. Savings = 100* (Expected savings/cost on-demand)",
      "applyFullSpot": "When applying the full spot",
      "savings": "Savings",
      "savingRate": "Reduction rate",
      "onDemandCosts": "On-Demand Costs",
      "applySpot": "When applying Spot Cost",
      "applyGPUSpot": "When applying GPU Spot Cost",
      "totalOnDemand": "Total On-Demand Usage",
      "savingsFullSpot": "Savings from full Spot Application",
      "savingsGPUSpot": "Savings from GPU Spot Application"
    },
    "estimatedMonthSaveSpot": {
      "fullSpotApp": "Estimated savings for full spot application",
      "fullSpotAppDes": "This is the estimated amount of savings you can save if you convert an instance that can be converted to a Spot Instance during an on-demand instance.",
      "estimatedSaveRate": "Estimated Savings Rate",
      "estimatedSaveRateDes": "Reduction in the ratio of savings made when switching to Spot Instance to on-demand = 100 × (cost of on-demand conversion of savings ÷ commitments)",
      "estimatedSaveGPUApp": "Estimated savings from GPU Spot application",
      "estimatedSaveGPUAppDes": "This is the expected savings if you convert an instance that can be converted to Spot Instance among GPU instances in use on demand.",
      "estimatedSaveGPU": "GPU Spot Estimated Savings",
      "estimatedSaveGPUDes": "Percentage savings from converting on-demand usage of GPU instances to Spot Instance = 100 × (Reduced ÷ commitment on-demand conversion costs)",
      "demandCost": "On-Demand Costs",
      "demandCostDes": "This is the cost of the last 30 days of Instance usage on OnDemand."
    },
   "savingStatus": {
      "title": "Spot Instance Savings Status",
      "status": "Spot Instance savings",
      "statusDes": "Represents the monthly savings as of the last 30 days discounted using Spot Instance in Korean won.",
      "onDemand": "Savings over on-demand usage",
      "currentAmount": "Spot usage",
      "savings": "Savings",
      "coverage": "Full Spot Coverage",
      "spotCoverage":"Full Spot Instance Coverage",
      "gpuCoverage": "GPU Spot Coverage",
      "gpuSpotCoverage":"GPU Spot Instance Coverage",
      "onDemandUseAmount": "On-demand conversion usage",
      "onDemandUseAmountDes": "Represents the expected monthly amount of use in Korean won as of 30 days when you convert your current instance to on-demand.",
      "compareOnDemandUse": "Savings compared to OnDemand usage",
      "compareOnDemandUseDes": "Reduction in the ratio of on-demand savings to Spot Instance = 100 × (reduction ÷ on-demand conversion costs)",
      "spotUseCost": "Cost of using Spot",
      "totalCost": "Total cost",
      "rateTrend": "Rate trends",
      "spotUsage": "Spot usage",
      "rateTrendDes1": "Shows the trend of spot usage and on-demand conversion.",
      "rateTrendDes2": "On-demand conversion refers to the amount converted from Spot usage to On-Demand usage.",
      "savingRate": "Reduction rate",
      "spotUsageTrendExcel": "Spot Usage_Trend"
    },
    "gpuCoverage": {
      "GPUSpotOnDemandConversion": "GPU Spot On Demand Conversion",
      "GPUSpotInstanceUsage": "GPU Spot Instance Usage",
      "title": "GPU Spot Coverage",
      "desc": "Coverage = GPU Spot On-Demand conversion cost / (GPU Spot On-Demand conversion cost + GPU On-Demand usage cost) x 100"
    },
    "fullCoverage": {
      "spotUsageOnDemandConversion": "Spot Usage On Demand Conversion",
      "totalSpotInstanceUsage": "Total Spot Instance Usage",
      "title": "Total Spot Coverage" ,
      "desc": "Coverage = Total Spot On-Demand conversion cost/(Total Spot On-Demand conversion cost + Total On-Demand usage cost) x 100"
    },
    "usageDetailTable": {
      "usageHistory": "Usage history",
      "requestDetail": "Request history",
      "resourceId": "Resource ID",
      "usageStatus": "Status of usage",
      "spotUsage": "Spot usage",
      "onDemandConversion": "On-demand conversion",
      "savings": "Savings",
      "reductionRate": "Reduction rate",
      "service": "Service",
      "instanceType": "Instance Type",
      "region": "Region",
      "availableArea": "Available area",
      "operatingSystem": "Operating system",
      "linkedAccount": "Linked Account",
      "requestId": "Request ID",
      "requestStatus": "Request Status",
      "requestDes": "Status Description",
      "requestCode": "Status code",
      "useStatus": "Status of use",
      "startDate": "Start date (MT+9)",
      "endDate": "End Date (GMT+9)",
      "serviceType": "Type of service",
      "requestStatusContent": {
        "cancel": {
          "title": "Request Cancellation",
          "description": "Your request has been canceled due to expiration",
          "code": "schedule-expired"
        }
      },
      "useStatusContent": {
        "terminated": {
          "title": "Terminated",
          "description": "Spot instance terminated because spot price exceeded top price",
          "code": "instance-terminated-by-price"
        }
      },
       "requestStatusList": {
          "pendingEvaluation": {
              "title": "Requesting",
              "description": "Evaluating request parameters.",
              "code": "pending-evaluation"
          },
          "pendingFulfillment": {
              "title": "Requesting",
              "description": "Spot is preparing for provisioning.",
              "code": "pending-fulfillment"
          },
          "fulfilled": {
              "title": "Requesting",
              "description": "Spot requesting and starting instance.",
              "code": "fulfilled"
          },
           "markedForStop": {
              "title": "Requesting",
              "description": "Spot instances are marked as destinations to stop.",
              "code": "marked-for-stop"
          },
           "markedForTermination": {
              "title": "Request pending",
              "description": "Spot instances are marked as destinations to stop.",
              "code": "marked-for-termination"
          },
           "capacityNotAvailable": {
              "title": "Request pending",
              "description": "The request was pending because the requested instance did not have enough free space.",
              "code": "capacity-not-available"
          },
           "priceTooLow": {
              "title": "Request pending",
              "description": "Your request has been put on hold because the highest price is lower than the Spot price.",
              "code": "price-too-low"
          },
           "notScheduledYet": {
              "title": "Request pending",
              "description": "The spot request is on hold until the scheduled date.",
              "code": "not-scheduled-yet"
          },
           "launchGroupConstraint": {
              "title": "Request pending",
              "description": "The request remains on hold until the launch group constraints are met.",
              "code": "launch-group-constraint"
          },
          "azGroupConstraint": {
             "title": "Request pending",
              "description": "The request remains on hold until the available area constraints are met.",
              "code": "az-group-constraint"
          },
          "placementGroupConstraint": {
            "title": "Request pending",
              "description": "The request was pending because Spot could not be added to the batch group.",
              "code": "placement-group-constraint"
          },
          "constraintNotFulfillable": {
             "title": "Request pending",
              "description": "One or more constraints are invalid and your request is pending.",
              "code": "constraint-not-fulfillable"
          },
          "instanceStoppedByUser1": {
             "title": "Request pending",
              "description": "The request was pending because the user stopped the instance.",
              "code": "instance-stopped-by-user"
          },
          "scheduleExpired": {
            "title": "Cancellation of Request",
              "description": "Your request has been canceled due to expiration.",
              "code": "schedule-expired"
          },
          "canceledBeforeFulfillment": {
             "title": "Cancellation of Request",
              "description": "The Spot request was canceled by the user before the request was fulfilled.",
              "code": "canceled-before-fulfillment"
          },
          "instanceTerminatedByService": {
             "title": "Cancellation of Request",
              "description": "The request was canceled because the instance was terminated.",
              "code": "instance-terminated-by-service"
          },
          "requestCanceledAndInstanceRunning": {
            "title": "Cancellation of Request",
              "description": "The spot request has been canceled by the user.",
              "code": "request-canceled-and-instance-running"
          },
          "badParameters": {
             "title": "Request failed",
              "description": "The request failed because the parameters for the Spot request were invalid.",
              "code": "bad-parameters"
          },
          "systemError": {
            "title": "Request failed",
              "description": "Spot request failed due to system error.",
              "code": "system-error"
          },
          "instanceStoppedByUser2": {
             "title": "Request failed",
              "description": "Your request has expired because the user stopped the instance.",
              "code": "instance-stopped-by-user"
          }
        },
           "usageStatusList": {
          "instanceTerminatedByPrice": {
             "title": "Terminated",
              "description": "Spot price has ended because it exceeded the highest price.",
              "code": "instance-terminated-by-price"
          },
          "instanceStoppedNoCapacity": {
            "title": "Terminated",
              "description": "The instance was stopped because the user stopped the instance or issued a shutdown command on the instance.",
              "code": "instance-stopped-no-capacity"
          },
          "instanceStoppedByPrice": {
            "title": "Terminated",
              "description": "The spot instance was stopped because the spot price exceeded the top price.",
              "code": "instance-stopped-by-price"
          },
          "instanceTerminatedBySchedule": {
            "title": "Terminated",
              "description": "The spot instance was terminated due to the expiration of the reservation period.",
              "code": "instance-terminated-by-schedule"
          },
          "instanceTerminatedByUser": {
            "title": "Terminated",
              "description": "The spot instance was terminated by the user.",
              "code": "instance-terminated-by-user"
          },
          "instanceTerminatedNoCapacity1": {
             "title": "Terminated",
              "description": "Spot instance terminated due to standard capacity management process. (Exit after 2 minutes of outage notification received)",
              "code": "instance-terminated-no-capacity"
          },
          "instanceTerminatedNoCapacity2": {
             "title": "Terminated",
              "description": "The instance has been terminated by the standard capacity management process, but the spot instance is being re-requested as a permanent request.",
              "code": "instance-terminated-no-capacity"
          },
          "instanceTerminatedLaunchGroupConstraint": {
             "title": "Terminated",
              "description": "The startup group constraints are no longer met because one or more instances in the startup group have been terminated.",
              "code": "instance-terminated-launch-group-constraint"
          },
          "fulfilled": {
            "title": "Be in Use",
            "description": "Spot instance is in use.",
            "code": "fulfilled"
          }
        },
      "standardTime": "Standard date and time",
      "inUse": "In use",
      "closed": "Closed",
      "failed": "Failed",
      "active": "Active",
      "requesting": "Requesting"
    },
    "spotRateCheck": {
      "title": "Spot Rate Check",
      "priceGrid": "Inquiry result",
      "priceGraph": "Fare History",
      "inquiryFilter": {
        "title": "Inquiry Filter",
        "availabilityZone": "Available area",
        "instanceType": "Instance Type",
        "region": "Region",
        "operateSys": "Operating system",
        "contractsAccounts": "Contracts and accounts",
        "selectInstance": "Select Instance",
        "instanceFamily": "Instance Family",
        "minimum":"Minimum",
        "maximum": "Maximum",
        "memory": "Memory (GiB)",
        "rateCheck": "Rate check",
        "rateCheckDes": "The physical location of the available area may not be the same for the selected contract and account.",
        "rateCheckNote": "Marking is a filter that must be entered.",
        "numberValidate": "Please check the number you entered.",
        "notedMessage": "The available area information being viewed may vary depending on the contract and account selected. Please select a contract and account to verify the exact fee according to the available area."

      },
       "searchPriceGrid": {
        "instanceType": "Instance Type",
        "region": "Region",
        "availableArea": "Available area",
        "operateSys": "Operating system",
        "vCPU": "vCPU",
        "memory": "Memory",
        "GPUtype": "GPU type",
        "GPUmemory": "GPU memory",
        "interruptionFrequency": "Interruption frequency",
        "currentRate": "Spot rate (h)",
        "averageAmount": "The average amount",
        "estimatedCost": "Estimated Duration Cost",
        "onDemandCost": "On-Demand Duration Cost",
        "averageSavingsRate": "Average Savings Rate",
        "gridNote": "This is the information that was viewed by the time period",
        "estimatedCostOneMonth": "Estimated cost",
        "onDemandCostOneMonth": "On-Demand Cost",
        "latestSpotRates": "Latest Spot Rates",
        "estimatedSpotCost": "Estimated Cost"
      }
    },
    "gpuSPot": {
      "spotPlacementScore": "Spot Placement Score",
      "spotPriceAndFrequency": "Spot price and frequency of interruption",
      "GPUSpotUsage": "GPU Spot Usage",
      "filter": "Filter",
      "gpuSpotTooltip": {
        "title": "Check the world map for information about GPU Spot.",
        "placementScore": "Spot Placement Score",
        "placementScoreDes": "We recommend regions or available areas based on the Spot placement score. Spot placement scores are scored based on whether the required Spot capacity can be obtained. If you specify the number of instances, instance type, or property for a Spot, it provides information on 10 regions or available areas that are likely to succeed (when selecting per available area). It is scored from 1 to 10 points, and a larger number indicates a higher probability of success of the instance request and a lower batch score indicates a lower probability of success. *Spot placement scores are probability information and do not indicate any guarantee of disruption risk.",
        "priceAndFrequency": "Price and frequency of interruption",
        "priceAndFrequencyDes": "By applying the instance type you want to use, you can see the different spot prices for each spot and available area and the frequency of interruption for that region. You can see the price and interruption per region by specifying the instance type yourself or by searching for an attribute and specifying one type.",
        "gpuUsageStatus": "GPU usage status",
        "gpuUsageStatusDes": "You can view the usage and distribution of the GPU instances that you are currently using with a world map and the status of the region."
      },
      "gpuSpotFilter": {
        "reset": "Initialize button",
        "account": "Account",
        "region": "Region",
        "availabilityZone": "Navigation by Available Area",
        "instanceTypeDirectly": "Select Instance Type Directly",
        "instanceTypeMatch": "Specify Instance Attributes",
        "all": "All",
        "choice": "Choice",
        "instances": "Instances",
        "instanceFamily": "Instance Family",
        "min": "Min",
        "max": "Max",
        "filterProperties": "Filter Properties",
        "addAttribute": "Add Properties",
        "atLeastInstance": "At least three things",
        "warning": "You must select an instance. If you look up three or fewer instances, it returns to a lower batch score",
        "apply": "Apply"
      },
      "gpuSpotMapChart": {
        "availableArea": "Available Area",
        "InterruptionFrequency": "Interruption frequency",
        "AverageExpected": "Average expected",
        "DeliverySpot": "Delivery Spot Family Series"
      },
      "gpuUsageTooltip": {
        "title": "Region usage status",
        "baseDate": "Base date",
        "availabilityZone": "Available area",
        "numberOfIntances": "Number of instances",
        "instanceDistribution": "Instance Distribution",
        "instanceType": "Instance Type",
        "viewAll": "View All",
        "unit": "unit",
        "onDemand": "On demand",
        "totalInstances": "Total Instances",
        "spotInstance": "Spot Instance",
        "onDemandInstance": "On-Demand Instances",
        "totalUse": "Total use",
        "gpuUsageHistory": "GPU Usage History"
      },
      "spotScoreNote":{
        "title": "GPU Spot Placement Score Application Items",
        "numberOfInstances" : "Number of instances",
        "memory": "Memory",
        "region": "Region",
        "availableArea": "Available Area"
      }
    },
    "schedulingRecommend": {
      "title": "Scheduling Recommendation",
      "schedulingSummary": {
        "estimatedSaveScheduling": "Estimated monthly savings when applying schedule",
        "estimatedSaveSchedulingDes": "Expected monthly savings upon completion of resource scheduling",
        "estimatedSaveRateScheduling": "Estimated monthly savings rate when applying schedule",
        "estimatedSaveRateSchedulingDes": "Expected monthly savings rate upon completion of resource scheduling",
        "estimatedOperationRateScheduling": "Estimated operation ratio when applying recommendations",
        "estimatedOperationRateSchedulingDes": "Expected ratio of running/stopped instances upon completion of resource scheduling",
        "recommendScheduleSummary": "Recommended Schedule Summary",
        "totalRecommendScheduleCount": "Total number of recommended schedules"
      },
      "detailTable": {
        "resourceID": "Resource ID",
        "service": "Service",
        "instanceType": "Instance Type",
        "region": "Region",
        "tag": "Tag",
        "recommendSchedule": "Recommend Schedule",
        "scheduleDetail": "Schedule Detail",
        "currentSchedule": "Current Schedule",
        "estimatedMonthSavingsCost": "Estimated Month Savings Cost",
        "estimatedMonthSavingsRate": "Estimated Month Savings Rate",
        "linkedAccount": "Linked Account",
        "Weekday": "Weekday",
        "Weekend": "Weekend",
        "Everyday": "Everyday",
        "Day": "Day",
        "Night": "Night",
        "check": "Check",
        "tooltip": {
          "recommendDetails": {
            "description": {
              "line1": "This is the scheduling recommendation history analyzed based on the instance usage rate of the past 30 days.",
              "line2": "If an instance is up and running within the reference time, it is recommended.",
              "line3": "Click the OK button in the Schedule Details column to see the detailed basis for the recommended schedule."
            }
          },
          "recommendCriteria": {
            "title": "Schedule recommendation criteria",
            "description": {
              "line1": "The schedule is recommended as a combination of hours (Day/Night) and days (Weekday/Weekend/Everyday).",
              "Weekday": "It is recommended if it is operated for more than 30 hours on weekdays.",
              "Weekend": "It is recommended if it is operated for more than 12 hours on weekends.",
              "Everyday": "It is recommended if both weekdays and weekends are in operation.",
              "Day": "It is recommended if it is operated for more than 5 hours between 7 a.m. and 9 p.m.",
              "Night": "It is recommended if it is operated for more than 5 hours between 9 p.m. and 7 a.m."
            }
          }
        }
      }
    },
    "schedulingRecommendGPU": {
      "title": "GPU Scheduling Recommendation",
      "schedulingSummary": {
        "estimatedSaveScheduling": "Estimated monthly savings when applying GPU schedule",
        "estimatedSaveSchedulingDes": "Expected monthly savings upon completion of resource scheduling",
        "estimatedSaveRateScheduling": "Estimated monthly savings rate when applying GPU schedule",
        "estimatedSaveRateSchedulingDes": "Expected monthly savings rate upon completion of resource scheduling",
        "estimatedSavingsByInstanceFamily": "Estimated savings by instance family",
        "recommendedInstanceFamilies": "Recommended instance families for GPU scheduling"
      }
    }
  }
}
